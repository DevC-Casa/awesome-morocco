name: Issue to PR
on:
  issues:
    types: [opened, edited]

jobs:
  Issue_to_PR:
    if: contains(github.event.issue.labels.*.name, 'new')
    runs-on: ubuntu-latest
    env:
      BODY: ${{ toJson(github.event.issue.body) }}
      LABELS: ${{ toJson(github.event.issue.labels) }}
      # DIR: "./content/generated/projects"
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
      - name: Install dependencies
        run: yarn install
        working-directory: scripts
      - name: Run tests
        run: yarn test
        working-directory: scripts
      - name: Run parser
        id: issue-parser
        run: |
          FILEPATH=$(NODE_PATH=scripts node --require tsm ./src/issue-parser.ts)
          echo "::set-output name=FILEPATH::$FILEPATH"
        working-directory: scripts

      - name: Create commits
        run: |
          git config user.name "${{ github.event.issue.user.login }}"
          git config user.email ${{ github.event.issue.user.login }}@users.noreply.github.com
          git add -A
          git commit -m "Add new content from issue"
      - name: Create a PR
        uses: peter-evans/create-pull-request@v3
        with:
          issue-number: ${{ github.event.issue.number }}
          title: ${{ github.event.issue.title }}
          branch: data-from-issue-${{ github.event.issue.number }}
          delete-branch: true
          author: ${{ github.event.issue.user.login }} <${{ github.event.issue.user.login }}@users.noreply.github.com>
          body: |
            Adding new content
            - Adding file  ${{ steps.issue-parser.outputs.FILEPATH }} 
            - Issue: #${{ github.event.issue.number }}
