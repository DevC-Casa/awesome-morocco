// Generated by Xata Codegen 0.26.9. Please do not edit.
import { buildClient } from "@xata.io/client";
import type {
  BaseClientOptions,
  SchemaInference,
  XataRecord,
} from "@xata.io/client";

const tables = [
  {
    name: "os_repositories",
    columns: [
      { name: "name", type: "string" },
      { name: "description", type: "string" },
      { name: "url", type: "string", unique: true },
      { name: "owner", type: "string" },
      { name: "stars", type: "int" },
      { name: "forks", type: "int" },
      { name: "issues", type: "int" },
      { name: "language", type: "string" },
      { name: "topics", type: "multiple" },
      {
        name: "submitted_by",
        type: "string",
        notNull: true,
        defaultValue: "anonymous",
      },
      { name: "draft", type: "bool", defaultValue: "true" },
      { name: "last_update", type: "datetime" },
    ],
  },
  {
    name: "blogs",
    columns: [
      { name: "title", type: "string" },
      { name: "description", type: "text" },
      { name: "url", type: "string", unique: true },
      { name: "image", type: "string" },
      {
        name: "submitted_by",
        type: "string",
        notNull: true,
        defaultValue: "anonymous",
      },
      { name: "draft", type: "bool", defaultValue: "true" },
      { name: "last_rss_retrieved_at", type: "datetime" },
      { name: "rss", type: "string" },
    ],
  },
  {
    name: "articles",
    columns: [
      { name: "title", type: "string" },
      { name: "description", type: "text" },
      { name: "url", type: "string", unique: true },
      { name: "published_at", type: "datetime" },
      { name: "image", type: "string" },
      { name: "open_graph_retrieved_count", type: "int", defaultValue: "0" },
    ],
  },
  {
    name: "podcasts",
    columns: [
      { name: "title", type: "string" },
      { name: "description", type: "text" },
      { name: "url", type: "string", unique: true },
      { name: "image", type: "string" },
      { name: "last_rss_retrieved_at", type: "datetime" },
      {
        name: "submitted_by",
        type: "string",
        notNull: true,
        defaultValue: "anonymous",
      },
      { name: "draft", type: "bool", defaultValue: "true" },
      { name: "spotify_url", type: "string" },
      { name: "total_episodes", type: "int" },
    ],
  },
  {
    name: "episodes",
    columns: [
      { name: "title", type: "string" },
      { name: "description", type: "text" },
      { name: "published_at", type: "datetime" },
      { name: "image", type: "string" },
      { name: "spotify_id", type: "string", unique: true },
    ],
  },
] as const;

export type SchemaTables = typeof tables;
export type InferredTypes = SchemaInference<SchemaTables>;

export type OsRepositories = InferredTypes["os_repositories"];
export type OsRepositoriesRecord = OsRepositories & XataRecord;

export type Blogs = InferredTypes["blogs"];
export type BlogsRecord = Blogs & XataRecord;

export type Articles = InferredTypes["articles"];
export type ArticlesRecord = Articles & XataRecord;

export type Podcasts = InferredTypes["podcasts"];
export type PodcastsRecord = Podcasts & XataRecord;

export type Episodes = InferredTypes["episodes"];
export type EpisodesRecord = Episodes & XataRecord;

export type DatabaseSchema = {
  os_repositories: OsRepositoriesRecord;
  blogs: BlogsRecord;
  articles: ArticlesRecord;
  podcasts: PodcastsRecord;
  episodes: EpisodesRecord;
};

const DatabaseClient = buildClient();

const defaultOptions = {
  databaseURL:
    "https://Youssouf-EL-AZIZI-s-workspace-28d54f.eu-west-1.xata.sh/db/aw-morocco",
};

export class XataClient extends DatabaseClient<DatabaseSchema> {
  constructor(options?: BaseClientOptions) {
    super({ ...defaultOptions, ...options }, tables);
  }
}

let instance: XataClient | undefined = undefined;

export const getXataClient = () => {
  if (instance) return instance;

  instance = new XataClient();
  return instance;
};
